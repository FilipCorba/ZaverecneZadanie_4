openapi: 3.0.0
info:
  title: Quiz Authentification API
  version: 1.0.0
paths:

  /login:
    post:
      tags:
        - Auth
      summary: Handles user login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                  token:
                    type: string

  /register:
    post:
      summary: Handles user registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required:
                - username
                - password
                - email
      responses:
        "200":
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user_id:
                    type: integer
                  token:
                    type: string

  /password-change:
    post:
      summary: Handles password change
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                password:
                  type: string
                new_password:
                  type: string
              required:
                - user_id
                - password
                - new_password
      responses:
        "200":
          description: Successful password change
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string

  /role:
    put:
      summary: Change user role to admin
      description: |
        Changes the role of a user to admin based on the provided user ID.
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: integer
            format: int64
            example: 123
          description: The ID of the user whose role will be changed to admin.
      responses:
        "200":
          description: User role changed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Role was succesfully changed
  /users:
    get:
      summary: Get users with roles
      description: Retrieves information about users along with their roles.
      responses:
        "200":
          description: Successful retrieval of users with roles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    name:
                      type: string
                    mail:
                      type: string
                    role:
                      type: string
  /admins:
    get:
      summary: Get admin users
      description: Retrieves information about admin users.
      responses:
        "200":
          description: Successful retrieval of admin users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    name:
                      type: string
                    mail:
                      type: string
                    role:
                      type: string
  /user:
    get:
      summary: Get user by ID
      description: Retrieves information about a user by their ID.
      parameters:
        - in: query
          name: user-id
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the user to retrieve information for.
      responses:
        "200":
          description: Successful retrieval of user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  role:
                    type: string  

 