openapi: 3.0.0
info:
  title: WEBTE final assignment API
  version: 1.0.0
paths:
  /auth.php/login:
    post:
      tags:
        - Auth
      summary: Handles user login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                  token:
                    type: string
        '400':
          description: Invalid password or missing parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth.php/register:
    post:
      summary: Handles user registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required:
                - username
                - password
                - email
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user_id:
                    type: integer
                  token:
                    type: string
        '400':
          description: Username or email already exists or missing parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth.php/password-change:
    post:
      summary: Handles password change
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                password:
                  type: string
                new_password:
                  type: string
              required:
                - user_id
                - password
                - new_password
      responses:
        '200':
          description: Successful password change
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
        '400':
          description: Invalid current password or missing parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User not found or password change request expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth.php/role:
    put:
      summary: Change user role to admin
      description: |
        Changes the role of a user to admin based on the provided user ID.
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: integer
            format: int64
            example: 123
          description: The ID of the user whose role will be changed to admin.
      responses:
        '200':
          description: User role changed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: User was successfully changed to admin.
        '403':
          description: Unauthorized token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized token.
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error.








  /quiz.php/generate-qr:
    post:
      tags:
        - Quiz
      summary: Generate QR Code for Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    subject:
                      type: string
                    user_id:
                      type: integer
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          question:
                            type: string
                          isOpenAnswer:
                            type: boolean
                          options:
                            type: array
                            items:
                              type: object
                              properties:
                                label:
                                  type: string
                                isCorrect:
                                  type: boolean
      responses:
        '200':
          description: QR Code generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
                  qr_code:
                    type: string
    get:
      summary: Get QR code by code
      description: Retrieve QR code image based on the provided code.
      parameters:
        - in: query
          name: code
          required: true
          description: The code to generate the QR code.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
                    format: binary
                    description: Base64-encoded QR code image.
                  qr_code:
                    type: string
                    description: Generated QR code URL.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the reason for the bad request.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating that the QR code was not found.
  /quiz.php/quiz:
    get:
      summary: Get quiz details by ID
      parameters:
        - name: quiz-id
          in: query
          description: ID of the quiz to retrieve
          required: true
          schema:
            type: integer
            format: int32
        - name: user-id
          in: query
          description: ID of the user who owns the quiz
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  quiz_id:
                    type: integer
                    format: int32
                  user_id:
                    type: integer
                    format: int32
                  quiz_title:
                    type: string
                  quiz_description:
                    type: string
                  quiz_created_at:
                    type: string
                    format: date-time
                  quiz_code:
                    type: string
                  subject:
                    type: string
                  questions:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        question_text:
                          type: string
                        open_question:
                          type: boolean
                        options:
                          type: array
                          items:
                            type: object
                            properties:
                              option_id:
                                type: integer
                                format: int32
                              option_text:
                                type: string
                              is_correct:
                                type: boolean
                              context:
                                type: string